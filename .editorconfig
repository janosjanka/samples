# EditorConfig: http://EditorConfig.org
# C# Roslyn Config: https://github.com/dotnet/roslyn/blob/master/.editorconfig

# Top-most EditorConfig file
root = true

# Don't use tabs for indentation
[*]
indent_style = space

# All source files
[*.{ts,json,js,cs,csx,css,scss,htm,html,ps1,sh}]
charset = utf-8
end_of_line = crlf
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

# Xml project files
[*.{csproj,proj,projitems,shproj}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct,xml}]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf

##############################################################################
# Dotnet Code Style Settings
##############################################################################

[*.{cs,csx}]
charset = utf-8-bom
indent_size = 4

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Avoid "this." if not necessary
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:refactoring
dotnet_style_prefer_conditional_expression_over_return = true:refactoring

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Code quality
dotnet_style_readonly_field = true:suggestion
dotnet_code_quality_unused_parameters = non_public:suggestion

##############################################################################
# CSharp Code Style Settings
##############################################################################

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_prefer_static_local_function = true:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = when_multiline:warning
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Currently only enabled for C# due to crash in VB analyzer.  VB can be enabled once
# https://github.com/dotnet/roslyn/pull/54259 has been published.
dotnet_style_allow_statement_immediately_after_block_experimental = false

##############################################################################
# Code Analysis Rules
# https://docs.microsoft.com/en-us/visualstudio/code-quality/fxcop-rule-port-status
##############################################################################

# Microsoft.Documentation
dotnet_diagnostic.CA1200.severity = none        # Avoid using cref tags with a prefix

# Microsoft.CodeQuality.Analyzers
dotnet_diagnostic.CA1012.severity = warning     # Abstract types should not have public constructors
dotnet_diagnostic.CA1062.severity = none        # Validate arguments of public methods (false positive for C# 8 nullable reference types)
dotnet_diagnostic.CA1031.severity = suggestion  # Do not catch general exception types
dotnet_diagnostic.CA1054.severity = suggestion  # Uri parameters should not be strings
dotnet_diagnostic.CA1303.severity = suggestion  # Do not pass literals as localized parameters
dotnet_diagnostic.CA1308.severity = suggestion  # Normalize strings to uppercase
dotnet_diagnostic.CS1591.severity = suggestion  # Missing XML comment for publicly visible type or member 'Type_or_Member'
dotnet_diagnostic.CA1724.severity = suggestion  # Type names should not match namespaces (ReefReview.Project.Project ???)
dotnet_diagnostic.CA1801.severity = suggestion  # Review unused parameters (Required for unified interface/conventional method declaration)
dotnet_diagnostic.CA1802.severity = suggestion  # Use Literals Where Appropriate
dotnet_diagnostic.CA1815.severity = suggestion  # Override equals and operator equals on value types
dotnet_diagnostic.CA1822.severity = suggestion  # Mark members as static
dotnet_diagnostic.CA1824.severity = none        # DotNetCore does not have resource fallbacks
dotnet_diagnostic.CA2007.severity = none        # Do not directly await a Task (SynchronizationContext does not exist in ASP.NET Core)
dotnet_diagnostic.CA2225.severity = none        # Operator overloads have named alternates (C# supports operator overloading)
dotnet_diagnostic.CA2227.severity = suggestion  # Collection properties should be read only (JSON Serializer is not supporting yet)

##############################################################################
# IDE
##############################################################################

file_header_template = Copyright (c) DotNet Samples. All rights reserved.\nSee License.txt in the project root for license information.

dotnet_diagnostic.IDE0007.severity = warning  # Prefer "var" everywhere
dotnet_diagnostic.IDE0011.severity = warning  # We need the below severity entry for Add Braces due to https://github.com/dotnet/roslyn/issues/44201
dotnet_diagnostic.IDE0073.severity = warning  # IDE0073: File header
dotnet_diagnostic.IDE0035.severity = warning  # IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0036.severity = warning  # IDE0036: Order modifiers
dotnet_diagnostic.IDE0040.severity = warning  # IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0043.severity = warning  # IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.IDE0044.severity = warning  # IDE0044: Make field readonly
dotnet_diagnostic.IDE0051.severity = warning  # IDE0051: Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning  # IDE0052: Remove unread private member
dotnet_diagnostic.IDE0055.severity = warning  # IDE0055: Fix formatting
dotnet_diagnostic.IDE0059.severity = warning  # IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.IDE0060.severity = warning  # IDE0060: Remove unused parameter
dotnet_diagnostic.IDE2000.severity = warning  # IDE2000: dotnet_style_allow_multiple_blank_lines_experimental
dotnet_diagnostic.IDE2001.severity = warning  # csharp_style_allow_embedded_statements_on_same_line_experimental
dotnet_diagnostic.IDE2002.severity = warning  # csharp_style_allow_blank_lines_between_consecutive_braces_experimental
dotnet_diagnostic.IDE2003.severity = warning  # dotnet_style_allow_statement_immediately_after_block_experimental
dotnet_diagnostic.IDE2004.severity = warning  # csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental